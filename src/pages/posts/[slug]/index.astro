---
import BaseLayout from "../../../layouts/base.astro";
import Tag from "../../../components/tag.astro";
import { getCollection } from "astro:content";
import { getOgImagesForPost } from "../../../utils/opengraph";
import "../../../styles/post.css";

export async function getStaticPaths() {
	const posts = await getCollection("posts");
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: { post },
	}));
}

const { post } = Astro.props;
const { Content } = await post.render();

const publishedAt = new Intl.DateTimeFormat("en-US", {
	dateStyle: "long",
	timeZone: "utc",
}).format(post.data.publishedAt);

const { og, twitter } = getOgImagesForPost(post);
const imageUrl = `${import.meta.env.SITE}/posts/${post.slug}/og.png`;
---

<BaseLayout title={post.data.title} description={post.data.description}>
	<Fragment slot="head">
		<link
			rel="preload"
			href="/fonts/JetBrainsMono-Regular.woff2"
			as="font"
			type="font/woff2"
			crossorigin
		/>
		<meta property="og:image" content={og.url} />
		<meta property="og:image:width" content={og.width} />
		<meta property="og:image:height" content={og.height} />
		<meta property="og:image:alt" content={post.data.title} />
		<meta name="twitter:image" content={twitter.url} />
	</Fragment>
	<header class="font-robot space-y-6">
		<h1 class="text-4xl tracking-tight font-extrabold">
			{post.data.title}
		</h1>
		<p class="text-xl text-muted-foreground">{post.data.description}</p>
		<div class="flex justify-between">
			<div class="flex items-center gap-2">
				{post.data.tags.map((tag) => <Tag tag={tag} />)}
			</div>
			<time
				datetime={post.data.publishedAt.toISOString()}
				class="text-gray-500 block"
			>
				{publishedAt}
			</time>
		</div>
	</header>
	<article class="mt-8 content">
		<Content />
	</article>
	<style>
		@font-face {
			font-family: "JetBrains Mono";
			src: url("/fonts/JetBrainsMono-Regular.woff2") format("woff2");
			font-display: swap;
		}
	</style>
</BaseLayout>
